blueprint:
  name: Hue Dimmer Light Control
  description: Control a light or group with a Hue dimmer.
  domain: automation
  input:
    hue_remote:
      name: Hue Remote
      description: The binary sensor that triggers the light.
      selector:
        entity:
          domain: sensor
    light_entity:
      name: Light
      description: The light to control.
      selector:
        entity:
          domain: light
    default_brightness:
      name: Default Brightness
      description: The default brightness when the light is switched on.
      default: 100
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: percent

trigger:
  platform: state
  entity_id: !input hue_remote

action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "on_press" }}'
        sequence:
          - action: light.turn_on
            data:
              entity_id: !input light_entity
              brightness_pct: !input default_brightness
  #    - conditions:
   #       - condition: template
  #          value_template: '{{ trigger.to_state.state == "up_press" }}'
#        sequence:
#          - action: light.turn_on
#            data:
 #             entity_id: !input light_entity
 #             brightness_step_pct: 10
  #    - conditions:
   #       - condition: template
   #         value_template: '{{ trigger.to_state.state == "down_press" }}'
    #    sequence:
   #       - action: light.turn_on
  #          data:
  #            entity_id: !input light_entity
#              brightness_step_pct: -10  
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "off_press" }}'
        sequence:
          - action: light.turn_off
            data:
              entity_id: !input light_entity
