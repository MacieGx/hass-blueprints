blueprint:
  name: Hue Dimmer Light Control
  description: Control a light or group with a Hue dimmer.
  domain: automation
  input:
    hue_remote:
      name: Hue Remote
      description: The binary sensor that triggers the light.
      selector:
        entity:
          domain: sensor
          multiple: true
    light_entity:
      name: Light
      description: The light to control.
      selector:
        entity:
          domain: light
    light_schedule:
      name: Schedule
      decription: Should different lights turn on depending on the time of day?
      selector:
        boolean:
    day_scene:
      name: Day Scene
      description: The scene to enable during the day.
      selector:
        entity:
          domain: scene
    day_start:
      name: Day Start
      description: The time the day scene should be activated.
      selector:
        time:
    night_scene:
      name: Night Scene
      description: The scene to enable during at night.
      selector:
        entity:
          domain: scene
    night_start:
      name: Night Start
      description: The time the night scene should be activated.
      selector:
        time:
    default_brightness:
      name: Default Brightness
      description: The default brightness when the light is switched on.
      default: 100
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: percent
variables:
  schedule: !input light_schedule
trigger:
  platform: state
  entity_id: !input hue_remote

action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "on_press" }}'
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ schedule == false }}"
                sequence:
                  - action: light.turn_on
                    data:
                      entity_id: !input light_entity
                      brightness_pct: !input default_brightness
              - conditions:
                  - condition: template
                    value_template: "{{ schedule == true }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: time # Daytime
                             after: !input day_start
                             before: !input night_start
                        sequence:
                          - action: scene.turn_on
                            data:
                              entity_id: !input day_scene
                      - conditions:
                          - condition: time # Nighttime
                             after: !input night_start
                             before: !input day_start
                        sequence:
                          - action: scene.turn_on
                            data:
                              entity_id: !input night_scene
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "up_press" }}'
          - condition: state
            entity_id: !input light_entity
            state: "on"
        sequence:
          - action: light.turn_on
            data:
              entity_id: !input light_entity
              brightness_step: 25
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "down_press" }}'
          - condition: state
            entity_id: !input light_entity
            state: "on"
        sequence:
          - action: light.turn_on
            data:
              entity_id: !input light_entity
              brightness_step: -25  
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "off_press" }}'
        sequence:
          - action: light.turn_off
            data:
              entity_id: !input light_entity
